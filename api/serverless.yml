service: replay-bot-api

provider:
  name: aws
  runtime: python3.6
  environment:
    REDDIT_CLIENT_ID: ${env:REDDIT_CLIENT_ID}
    REDDIT_CLIENT_SECRET: ${env:REDDIT_CLIENT_SECRET}
    REDDIT_USERNAME: ${env:REDDIT_USERNAME}
    REDDIT_PASSWORD: ${env:REDDIT_PASSWORD}
    REDDIT_USER_AGENT: ${env:REDDIT_USER_AGENT}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Query
        - dynamodb:Scan
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

package:
  exclude:
    - '.serverless/**'
    - 'venv/**'

functions:
  poll:
    description: "Register worker presence and check for assigned jobs"
    handler: api.poll.handler
    events:
      - http:
          path: poll
          method: post
  jobs_new:
    description: "Create a new job and assign it to a worker if possible"
    handler: api.jobs.new.handler
    events:
      - http:
          path: jobs/new
          method: post
  jobs_status:
    description: "Update the status of a running job"
    handler: api.jobs.status.handler
    events:
      - http:
          path: jobs/status
          method: post
  jobs_cleanup:
    description: "Clear frozen jobs from the active table"
    handler: api.jobs.cleanup.handler
    events:
      - schedule:
          rate: rate(30 minutes)

resources:
  Resources:
    ActiveTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: replay-bot-jobs-active
        AttributeDefinitions:
          - AttributeName: worker
            AttributeType: S
        KeySchema:
          - AttributeName: worker
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    BackloggedTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: replay-bot-jobs-backlogged
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    CompletedTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: replay-bot-jobs-completed
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    WorkerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: replay-bot-workers
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

plugins:
  - serverless-python-requirements
